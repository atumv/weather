{"version":3,"sources":["components/Header.js","components/Input.js","components/GetBtn.js","components/LoadingBtn.js","components/CityExamples.js","components/Form.js","components/Weather.js","components/Error.js","utils/getData.js","App.js","variables/variables.js","index.js"],"names":["Header","className","href","Input","setInputRef","input","useRef","useEffect","current","focus","type","name","placeholder","ref","GetBtn","setGetBtnRef","getBtn","LoadingBtn","disabled","CityExamples","inputRef","getBtnRef","attributes","onClick","e","preventDefault","value","target","textContent","click","Form","loading","getWeather","useState","undefined","onSubmit","Weather","props","windDir","temp","city","country","icon","description","windSpeed","windDirection","plusSign","Math","round","src","alt","Error","error","getData","url","a","fetch","response","data","json","App","apiKey","baseUrl","iconBaseUrl","setTemp","setCity","setCountry","setWindDirection","setWindSpeed","setIcon","setDescription","setLoading","setError","inputValue","elements","query","trim","code","cod","clearState","setState","main","sys","wind","deg","speed","weather","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8cf2489.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => (\r\n  <h1 className=\"header\">\r\n    <a className=\"header-link\" href=\"index.html\">\r\n      Погода\r\n    </a>\r\n  </h1>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nconst Input = ({ setInputRef }) => {\r\n  const input = useRef();\r\n\r\n  useEffect(() => {\r\n    setInputRef(input);\r\n  }, []);\r\n\r\n  useEffect(() => input.current.focus());\r\n\r\n  return (\r\n    <input\r\n      className=\"city-input\"\r\n      type=\"text\"\r\n      name=\"query\"\r\n      placeholder=\"Введите город\"\r\n      ref={input}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nconst GetBtn = ({ setGetBtnRef }) => {\r\n  const getBtn = useRef();\r\n\r\n  useEffect(() => {\r\n    setGetBtnRef(getBtn);\r\n  }, []);\r\n  \r\n  return (\r\n    <button className=\"btn get-btn\" ref={getBtn}>\r\n      Получить\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GetBtn;\r\n","import React from \"react\";\r\n\r\nconst LoadingBtn = () => (\r\n  <button className=\"btn loading-btn\" disabled>\r\n    <div className=\"spinner\" />\r\n  </button>\r\n);\r\n\r\nexport default LoadingBtn;\r\n","import React from \"react\";\r\n\r\nconst CityExamples = ({ inputRef, getBtnRef }) => {\r\n  const getWeatherExample = e => {\r\n    e.preventDefault();\r\n    inputRef.current.value = e.target.textContent;\r\n    getBtnRef.current.click();\r\n    inputRef.current.value = '';\r\n  };\r\n\r\n  const attributes = {\r\n    className: \"city-example-link\",\r\n    href: \"#\",\r\n    onClick: getWeatherExample\r\n  };\r\n\r\n  return (\r\n    <div className=\"city-examples\">\r\n      <a {...attributes}>Нью-Йорк</a>\r\n      <a {...attributes}>Токио</a>\r\n      <a {...attributes}>Москва</a>\r\n      <a {...attributes}>Хельсинки</a>\r\n      <a {...attributes}>Лондон</a>\r\n      <a {...attributes}>Стамбул</a>\r\n      <a {...attributes}>Новосибирск</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityExamples;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"./Input\";\r\nimport GetBtn from \"./GetBtn\";\r\nimport LoadingBtn from \"./LoadingBtn\";\r\nimport CityExamples from \"./CityExamples\";\r\n\r\nconst Form = ({ loading, getWeather }) => {\r\n  const [inputRef, setInputRef] = useState(undefined);\r\n  const [getBtnRef, setGetBtnRef] = useState(undefined);\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={getWeather}>\r\n      <Input setInputRef={setInputRef} />\r\n      {loading ? <LoadingBtn /> : <GetBtn setGetBtnRef={setGetBtnRef} />}\r\n      <CityExamples inputRef={inputRef} getBtnRef={getBtnRef} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Weather = props => {\r\n  const {\r\n    temp,\r\n    city,\r\n    country,\r\n    icon,\r\n    description,\r\n    windSpeed,\r\n    windDirection\r\n  } = props;\r\n\r\n  const plusSign = temp > 0 ? <span>+</span> : null;\r\n\r\n  let windDir;\r\n\r\n  if (windDirection >= 247 && windDirection <= 292) {\r\n    windDir = <span>← (З)</span>;\r\n  } else if (windDirection >= 293 && windDirection <= 337) {\r\n    windDir = <span>↖ (СЗ)</span>;\r\n  } else if (windDirection >= 338 && windDirection <= 22) {\r\n    windDir = <span>↑ (С)</span>;\r\n  } else if (windDirection >= 23 && windDirection <= 67) {\r\n    windDir = <span>↗ (СВ)</span>;\r\n  } else if (windDirection >= 68 && windDirection <= 112) {\r\n    windDir = <span>→ (В)</span>;\r\n  } else if (windDirection >= 113 && windDirection <= 157) {\r\n    windDir = <span>↘ (ЮВ)</span>;\r\n  } else if (windDirection >= 158 && windDirection <= 202) {\r\n    windDir = <span>↓ (Ю)</span>;\r\n  } else if (windDirection >= 203 && windDirection <= 246) {\r\n    windDir = <span>↙ (ЮЗ)</span>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <p className=\"weather-city\">\r\n        {city}, {country}\r\n      </p>\r\n      <p className=\"weather-temp\">\r\n        {plusSign}\r\n        {Math.round(temp)}°C\r\n      </p>\r\n      <div className=\"weather-description\">\r\n        <img className=\"weather-description-icon\" src={icon} alt=\"icon\" />\r\n        <span className=\"weather-description-text\">{description}</span>\r\n      </div>\r\n      <p className=\"weather-wind\">\r\n        Ветер: {Math.round(windSpeed)} м/с {windDir}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ error }) => <p className=\"error\">{error}</p>;\r\n\r\nexport default Error;\r\n","const getData = async url => {\r\n  const response = await fetch(url);\r\n  const data = response.json();\r\n  return data;\r\n};\r\n\r\nexport default getData;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Form from \"./components/Form\";\r\nimport Weather from \"./components/Weather\";\r\nimport Error from \"./components/Error\";\r\nimport { api_key, base_url, icon_base_url } from \"./variables/variables\";\r\nimport getData from \"./utils/getData\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/media.css\";\r\n\r\nconst App = () => {\r\n  const [apiKey] = useState(api_key);\r\n  const [baseUrl] = useState(base_url);\r\n  const [iconBaseUrl] = useState(icon_base_url);\r\n  const [temp, setTemp] = useState(undefined);\r\n  const [city, setCity] = useState(undefined);\r\n  const [country, setCountry] = useState(undefined);\r\n  const [windDirection, setWindDirection] = useState(undefined);\r\n  const [windSpeed, setWindSpeed] = useState(undefined);\r\n  const [icon, setIcon] = useState(undefined);\r\n  const [description, setDescription] = useState(undefined);\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const getWeather = async e => {\r\n    e.preventDefault();\r\n\r\n    const inputValue = e.target.elements.query.value;\r\n    let query = inputValue.trim();\r\n\r\n    if (query) setLoading(true);\r\n\r\n    const url = `${baseUrl}&appid=${apiKey}&q=${query}`;\r\n    const data = await getData(url);\r\n    const code = data.cod;\r\n\r\n    const clearState = () => {\r\n      setTemp(undefined);\r\n      setCity(undefined);\r\n      setCountry(undefined);\r\n      setWindDirection(undefined);\r\n      setWindSpeed(undefined);\r\n      setIcon(undefined);\r\n      setDescription(undefined);\r\n    };\r\n\r\n    const setState = () => {\r\n      setTemp(data.main.temp);\r\n      setCity(data.name);\r\n      setCountry(data.sys.country);\r\n      setWindDirection(data.wind.deg);\r\n      setWindSpeed(data.wind.speed);\r\n      setIcon(`${iconBaseUrl}${data.weather[0].icon}.png`);\r\n      setDescription(data.weather[0].description);\r\n    };\r\n\r\n    if (code == 400) {\r\n      clearState();\r\n      setError(undefined);\r\n      setLoading(false);\r\n    } else if (code == 404) {\r\n      clearState();\r\n      setError(\"Город не найден.\");\r\n      setLoading(false);\r\n    } else if (code == 200) {\r\n      setState();\r\n      setError(undefined);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Form loading={loading} getWeather={getWeather} />\r\n      {!loading && city && (\r\n        <Weather\r\n          temp={temp}\r\n          city={city}\r\n          country={country}\r\n          icon={icon}\r\n          description={description}\r\n          windSpeed={windSpeed}\r\n          windDirection={windDirection}\r\n        />\r\n      )}\r\n      <Error error={error} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const api_key = \"4c3dab4e5b6cd35fa657b1440eb74bfb\";\r\nexport const base_url =\r\n  \"https://api.openweathermap.org/data/2.5/weather?units=metric&lang=ru\";\r\nexport const icon_base_url = `https://openweathermap.org/img/wn/`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}